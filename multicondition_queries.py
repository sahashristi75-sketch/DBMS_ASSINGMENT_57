# -*- coding: utf-8 -*-
"""multicondition_queries

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/128C_RAbfu_fMCfNxNm1bySCR-0W3LhcC
"""

import re

def extract_number(text):
    """Extract the first number from text, return None if not found."""
    match = re.search(r'\d+', text)
    return match.group() if match else None

def nlq_to_sql(nl_query):
    nl_query = nl_query.lower().strip()
    sql = "SELECT * FROM students"
    conditions = []

    # Mapping for numeric fields
    fields = {
        "marks": "marks",
        "age": "age"
    }

    # Numeric condition handling
    for keyword, column in fields.items():
        if keyword in nl_query:
            num = extract_number(nl_query)
            if num:
                if "above" in nl_query or "greater than" in nl_query:
                    conditions.append(f"{column} > {num}")
                elif "below" in nl_query or "less than" in nl_query or "younger than" in nl_query:
                    conditions.append(f"{column} < {num}")
                elif "equal" in nl_query or "equals" in nl_query:
                    conditions.append(f"{column} = {num}")

    # Grade condition
    grade_match = re.search(r"grade\s*([a-z])", nl_query)
    if grade_match:
        grade_value = grade_match.group(1).upper()
        conditions.append(f"grade = '{grade_value}'")

    # Combine conditions
    if conditions:
        if " and " in nl_query:
            sql += " WHERE " + " AND ".join(conditions)
        elif " or " in nl_query:
            sql += " WHERE " + " OR ".join(conditions)
        else:
            sql += " WHERE " + " AND ".join(conditions)
    else:
        sql += ";"

    return sql

if __name__ == "__main__":
    print("Natural Language to SQL Converter (Alternative Version)")
    print("Examples:")
    print("- Show all students with marks above 80")
    print("- List students older than 20 and with grade A\n")

    user_query = input("Enter your query: ")
    sql_query = nlq_to_sql(user_query)

    print("\nGenerated SQL Query:")
    print(sql_query)